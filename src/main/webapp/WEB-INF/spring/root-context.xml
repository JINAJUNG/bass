<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<context:property-placeholder location="classpath:config/db.properties"/>
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="jdbcUrl" value="${db.jdbcUrl}"/>
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
		<property name="driverClassName" value="${db.driverClassName}"/>
		<property name="autoCommit" value="${db.autoCommit}"/>
		<property name="minimumIdle" value="${db.minimumIdle}"/>
		<property name="maximumPoolSize" value="${db.maximumPoolSize}"/>
	</bean>
	
	<bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>
	
	
	<bean id="dataSourceProxy" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="hikariDataSource"></constructor-arg>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/>
				<property name="sqlPrefix" value="CUSTOM SQL LOG : ========>"></property>
			</bean>
		</property>
	</bean>
	
	
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceProxy"/>
		<property name="configLocation" value="classpath:config/mybatis.xml"/>
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSourceProxy"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
				<tx:method name="*" rollback-for ="Exception"></tx:method> 
				<!--insert,update,delete 모두 가져온다 안녕 민영씌 나는 누구일까여???-->
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
	<aop:pointcut id="txPointcut" expression="execution(* com.bass.test.service.impl.*ServiceImpl.*(..))"></aop:pointcut>
	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"></aop:advisor>
	</aop:config>
	
	<context:component-scan base-package="com.bass.test.service"></context:component-scan>
	<context:component-scan base-package="com.bass.test.dao"></context:component-scan>
	<context:component-scan base-package="com.bass.test.aop.log"></context:component-scan>
	
	
	<bean id="stu" class="com.bass.test.dao.impl.NaverTransDAOImpl"></bean>
</beans>
